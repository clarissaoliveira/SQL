/This is a fictional project for a new movie-rating website, and I've been collecting data on reviewers' ratings of various movies. 

Here's the schema:

Movie ( mID, title, year, director )
-There is a movie with ID number mID, a title, a release year, and a director.

Reviewer ( rID, name )
-The reviewer with ID number rID has a certain name.

Rating ( rID, mID, stars, ratingDate )
-The reviewer rID gave the movie mID a number of stars rating (1-5) on a certain ratingDate./

-Find the titles of all movies directed by Steven Spielberg.

SELECT title
FROM movie
WHERE director = 'Steven Spielberg'

-Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order.

SELECT DISTINCT year
FROM movie
WHERE mID IN
(
SELECT DISTINCT mID
FROM rating
WHERE stars >= 4
	)
	ORDER BY year ASC

-Find the titles of all movies that have no ratings.

SELECT title
FROM movie
WHERE mID NOT IN 
(
SELECT DISTINCT mID
FROM rating
	)

-Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date.

SELECT name
FROM reviewer
WHERE rID IN
(
SELECT DISTINCT rID
FROM rating
WHERE ratingDate IS NULL
	)

-Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. 
Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars.

SELECT name, title, stars, ratingDate
FROM movie, reviewer, rating
WHERE rating.rID = reviewer.rID AND movie.mID = rating.mID
ORDER BY name, title, stars

-For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie.

SELECT name, title
FROM Movie
INNER JOIN Rating R1 USING(mId)
INNER JOIN Rating R2 USING(rId)
INNER JOIN Reviewer USING(rId)
WHERE R1.mId = R2.mId AND R1.ratingDate < R2.ratingDate AND R1.stars < R2.stars

-For each movie that has at least one rating, find the highest number of stars that movie received.
Return the movie title and number of stars. Sort by movie title.

SELECT title, MAX(stars)
FROM movie, rating
WHERE movie.mID = rating.mID
	GROUP BY rating.mID
	ORDER BY title

-For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. 
Sort by rating spread from highest to lowest, then by movie title.

SELECT title, (MAX(stars)-MIN(stars)) AS ratingspread
FROM movie, rating
WHERE movie.mID = rating.mID
	GROUP BY rating.mID
	ORDER BY ratingspread DESC, title

-Find the difference between the average rating of movies released before 1980 and the average rating of movies released after 1980. 

SELECT AVG(Before1980.avg) - AVG(After1980.avg)
FROM (
  SELECT AVG(stars) AS avg
  FROM Movie
  INNER JOIN Rating USING(mId)
  WHERE year < 1980
  GROUP BY mId
) AS Before1980, (
  SELECT AVG(stars) AS avg
  FROM Movie
  INNER JOIN Rating USING(mId)
  WHERE year > 1980
  GROUP BY mId
) AS After1980;


SELECT AVG(before1980.avg) - AVG(after1980.avg)
FROM
(SELECT AVG(stars) AS avg
FROM rating, movie
WHERE movie.mID = rating.mID AND year < 1980
GROUP BY rating.mID) AS before1980
,
(SELECT AVG(stars) AS avg
FROM rating, movie
WHERE movie.mID = rating.mID AND year > 1980
GROUP BY rating.mID) AS after1980

-Find the names of all reviewers who rated Gone with the Wind.

SELECT DISTINCT name
FROM reviewer, rating
WHERE reviewer.rID = rating.rID AND mID =
(
SELECT mID
	FROM movie
	WHERE title = 'Gone with the Wind')

-For any rating where the reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.

SELECT name, title, stars
FROM movie, rating, reviewer
WHERE reviewer.rID = rating.rID AND movie.mID = rating.mID AND name IN
(SELECT name
FROM reviewer, movie
WHERE reviewer.name = movie.director)

-Return all reviewer names and movie names together in a single list, alphabetized. 

SELECT name
FROM reviewer
UNION
SELECT title
FROM movie

-Find the titles of all movies not reviewed by Chris Jackson.

SELECT title
FROM movie
WHERE mID NOT IN(
SELECT mID
FROM rating
WHERE rID =
(
SELECT rID
FROM reviewer
WHERE name = 'Chris Jackson'))

